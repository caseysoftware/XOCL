package com.x.paidsearchadvertising.v1{
	
	import com.x.paidsearchadvertising.v1.*
	
	entity Campaign {
    	state Active[Inactive]	
    	state Inactive[Active]
    }
	
		
	transaction CreateAdvertiserAccount response {
        sender {
        	message CreateAdvertiserAccount {
        		timeouts( response=15s)     		
        		retries=3
        	}
        }
        receiver {
        	success CreateAdvertiserAccountSucceeded
            failure CreateAdvertiserAccountFailed
		}
    }

	transaction CreateCampaign (Campaign campaign) response {
        preconditions (
        	!exists(campaign)
        	
        )
        sender {
        	message CreateCampaign {
        		timeouts(response=15s)     		
        		retries=3
        	}
        }
        receiver {
        	success CreateCampaignSucceeded 
            
            failure CreateCampaignFailed
		}
    }
    	
	transaction DeleteCampaign (Campaign campaign) response {
        preconditions (
      		exists(campaign)
        	
        )
        sender{
        	message DeleteCampaign {
        		timeouts(response=15s)     	
        		retries=3
        	}
        }
        receiver {
        	success DeleteCampaignSucceeded 
            
            failure DeleteCampaignFailed 
		}
		postconditions{
			    success(
			    	exists(campaign)
			    )
		}
    }
    	
	transaction UpdateCampaign (Campaign campaign) response {
        preconditions (
        	exists(campaign)	
        )
        sender{
        	message UpdateCampaign {
        		timeouts(response=15s)     		
        		retries=3
        	}
        }
        receiver {
        	success UpdateCampaignSucceeded
        	
            
            failure UpdateCampaignFailed
		}
    }
    
        	
	transaction SuspendCampaign (Campaign campaign) response {
        preconditions (
        	campaign[Campaign.Active]
        )
        sender{
        	message SuspendCampaign {
        		timeouts( response=15s)     	
        		retries=3
        	}
        }
        receiver {
        	success SuspendCampaignSucceeded
        	
            failure SuspendCampaignFailed
		}
		postconditions{
			    success(
			    	campaign[Campaign.Inactive]
			    )	
		}
    }
   	transaction ResumeCampaign (Campaign campaign) response {
        preconditions (
        	exists(campaign)        	
        )
        sender{
        	message ResumeCampaign {
        		timeouts( response=15s)     		
        		retries=3
        	}
        }
        receiver {
        	success ResumeCampaignSucceeded
        	
            failure ResumeCampaignFailed
		}
		postconditions{
			    success(
			    	campaign[Campaign.Active]
			    )	
		}
    }
   	transaction AddOffersToCampaign (Campaign campaign) response {
        preconditions (
        	exists(campaign)	
        )
        sender{
        	message AddOffersToCampaign {
        		timeouts(response=15s)     		
        		retries=3
        	}
        }
        receiver {
        	success AddOffersToCampaignSucceeded
        
            failure AddOffersToCampaignFailed
		}
    }
	
	
	transaction LookupCampaignPerformanceReport query {
        sender{
        	message LookupCampaignPerformanceReport {
        		timeouts(response=5s)     		
        		retries=3
        	}
        }
        receiver {
        	success LookupCampaignPerformanceReportSucceeded
        
            failure LookupCampaignPerformanceReportFailed
		}
    }
	
	
}
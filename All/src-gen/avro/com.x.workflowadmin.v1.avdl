/**
 * This is a autogenerated using the com.x.ocl:xocl-maven-plugin:1.4.19 maven plugin.
 * The contents are generated from the following XOCL files:
 *            workflowadmin.messages.xocl
 *            workflowadmin.transactions.xocl
 *            workflowadmin.processes.xocl
 *            workflowadmin.version.xocl
 * DO NOT EDIT THIS FILE DIRECTLY
 */
@namespace("com.x.workflowadmin.v1")
@status("earlydraft")
protocol com_x_workflowadmin_v1 {
	import idl "com.x.core.v1.avdl";

	record NodeControls {
		boolean ifConditionEvaluatesToTrueAlways;
 		union{null,int} doLoopNumInterations = null;
  	}

	@topics("/com.x.workflowadmin.v1/GetPostWorkflowMetaData/GetWorkflowToAppInstanceMap")
	@version("1.0.3")
	record GetWorkflowToAppInstanceMap {
		array<string> workflowInstanceKeys;
  	}

	@topics("/com.x.workflowadmin.v1/GetPostWorkflowMetaData/GetWorkflowToAppInstanceMapSucceeded")
	@version("1.0.3")
	record GetWorkflowToAppInstanceMapSucceeded {
		map<string> workflowToAppInstanceMap;
  	}

	@topics("/com.x.workflowadmin.v1/GetPostWorkflowMetaData/GetWorkflowToAppInstanceMapFailed")
	@version("1.0.3")
	record GetWorkflowToAppInstanceMapFailed {
		array<com.x.core.v1.Error> errors;
  	}

	record TransactionControls {
		boolean preConditionsSucceedAlways;
 		boolean postConditionsSucceedAlways;
  	}

	record ApplicationInstanceControls {
		union{null,int} maxOwnedWorkflows = null;
 		union{null, string} leaseReleaseNode = null;
 		union{null, string} softCrashNode = null;
 		union{null, string} sleepNode = null;
 		union{null,long} sleepTimeInMillis = null;
 		union{null,boolean} clearAllControls = null;
  	}

	@topics("/com.x.workflowadmin.v1/ControlWorkflowExecution/WorkflowExecutionControls")
	@version("1.0.3")
	record WorkflowExecutionControls {
		union{null, string} workflowDefID = null;
 		union{null, string} workflowInstKey = null;
 		boolean workflowPreConditionsSucceedAlways;
 		boolean workflowPostConditionsSucceedAlways;
 		union{null, ApplicationInstanceControls} appInstanceControls = null;
 		union{null, NodeControls} commonNodeControls = null;
 		union{null, map<NodeControls>} nodeControls = null;
 		union{null, TransactionControls} commonTransactionControls = null;
 		union{null, map<TransactionControls>} transactionControls = null;
 		union{null,boolean} clearAllControls = null;
  	}


}
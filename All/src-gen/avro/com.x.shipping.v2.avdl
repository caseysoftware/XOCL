/**
 * This is a autogenerated using the com.x.ocl:xocl-maven-plugin:1.4.19 maven plugin.
 * The contents are generated from the following XOCL files:
 *            shipping.transactions.xocl
 *            shipping.messages.xocl
 *            shipping.processes.xocl
 *            shipping.version.xocl
 * DO NOT EDIT THIS FILE DIRECTLY
 */
@namespace("com.x.shipping.v2")
@status("workingdraft")
protocol com_x_shipping_v2 {
	import idl "com.x.core.v1.avdl";

	@topics("/com.x.shipping.v2/ValidateShippingAddress/ValidateShippingAddressFailed")
	@version("2.0.3")
	record ValidateShippingAddressFailed {
		com.x.core.v1.Address address;
 		array<com.x.core.v1.Error> errors;
  	}

	record CarrierOffice {
		union{null,string} name = null;
 		com.x.core.v1.Address location;
  	}

	@topics("/com.x.shipping.v2/FindCarrierOffices/FindCarrierOfficesSucceeded")
	@version("2.0.3")
	record FindCarrierOfficesSucceeded {
		array<CarrierOffice> carrierOffices;
  	}

	enum DimensionUnitType {
		INCHES,
		CENTIMETERS
	}

	enum WeightUnitType {
		POUNDS,
		KILOGRAMS
	}

	record CustomsItem {
		string originCountry;
 		double weightMajor;
 		double weightMinor;
 		WeightUnitType weightUnit;
 		com.x.core.v1.CurrencyAmount eachValue;
 		string tariffCode;
 		int quantity;
 		string itemDescription;
  	}

	record CustomsForm {
		string licenseNumber;
 		string itemDetail;
 		string itemType;
 		string comments;
 		string orderNumber;
 		string certificateNumber;
 		string eelpfc;
 		array<CustomsItem> items;
  	}

	enum ServiceClassType {
		NEXT_DAY_AIR,
		SECOND_DAY_AIR,
		THIRD_DAY,
		STANDARD_AIR,
		GROUND
	}

	record ShippingRate {
		ServiceClassType service;
 		com.x.core.v1.CurrencyAmount rate;
  	}

	@topics("/com.x.shipping.v2/CalculateShippingRates/CalculateShippingRatesSucceeded")
	@version("2.0.3")
	record CalculateShippingRatesSucceeded {
		array<ShippingRate> rates;
  	}

	record ShippingService {
		string name;
 		string code;
 		ServiceClassType serviceClass;
 		double maxPackageWeight;
  	}

	@topics("/com.x.shipping.v2/GetShippingServices/GetShippingServicesSucceeded")
	@version("2.0.3")
	record GetShippingServicesSucceeded {
		array<ShippingService> serviceTypes;
  	}

	enum SignatureOptionType {
		SIGNATURE_REQURED,
		NO_SIGNATURE_REQUIRED,
		DIRECT,
		INDIRECT
	}

	@topics("/com.x.shipping.v2/ProcessShipment/GetTrackingInformationFailed")
	@version("2.0.3")
	record GetTrackingInformationFailed {
		string trackingNumber;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.shipping.v2/ValidateShippingAddress/ValidateShippingAddressSucceeded")
	@version("2.0.3")
	record ValidateShippingAddressSucceeded {
		com.x.core.v1.Address address;
 		boolean isValid;
  	}

	@topics("/com.x.shipping.v2/FindCarrierOffices/FindCarrierOfficesFailed")
	@version("2.0.3")
	record FindCarrierOfficesFailed {
		com.x.core.v1.Address targetAddress;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.shipping.v2/GetShippingServices/GetShippingServices")
	@version("2.0.3")
	record GetShippingServices {
 	}

	record SpecialService {
		string name;
 		string serviceDescription;
 		com.x.core.v1.CurrencyAmount fee;
  	}

	@topics("/com.x.shipping.v2/GetCarrierSpecialServices/GetCarrierSpecialServicesSucceeded")
	@version("2.0.3")
	record GetCarrierSpecialServicesSucceeded {
		array<SpecialService> specialServices;
  	}

	@topics("/com.x.shipping.v2/ProcessShipment/GetTrackingInformation")
	@version("2.0.3")
	record GetTrackingInformation {
		string trackingNumber;
  	}

	enum HandoffModeType {
		PICKUP,
		DROPOFF
	}

	record CarrierHandoffMode {
		string Code;
 		string Description;
 		HandoffModeType handoffMode;
  	}

	@topics("/com.x.shipping.v2/GetCarrierHandoffTypes/GetCarrierHandoffTypesSucceeded")
	@version("2.0.3")
	record GetCarrierHandoffTypesSucceeded {
		array<CarrierHandoffMode> handoffModes;
  	}

	@topics("/com.x.shipping.v2/FindCarrierOffices/FindCarrierOffices")
	@version("2.0.3")
	record FindCarrierOffices {
		com.x.core.v1.Address targetAddress;
  	}

	enum PackageSizeType {
		REGULAR,
		LARGE,
		OVERSIZE
	}

	enum PackagingMethodType {
		TOGETHER,
		SEPARATELY
	}

	@topics("/com.x.shipping.v2/ValidateShippingAddress/ValidateShippingAddress")
	@version("2.0.3")
	record ValidateShippingAddress {
		com.x.core.v1.Address address;
  	}

	@topics("/com.x.shipping.v2/GetCarrierSpecialServices/GetCarrierSpecialServices")
	@version("2.0.3")
	record GetCarrierSpecialServices {
 	}

	@topics("/com.x.shipping.v2/ProcessShipment/RequestShipmentPickup")
	@version("2.0.3")
	record RequestShipmentPickup {
		com.x.core.v1.Address pickupLocation;
  	}

	enum LabelImageType {
		ENCODED_STRING,
		URL
	}

	record ShippingLabel {
		string trackingNumber;
 		LabelImageType imageType;
 		string encodedImage;
 		string imageUrl;
 		com.x.core.v1.CurrencyAmount cost;
  	}

	@topics("/com.x.shipping.v2/ProcessShipment/CreateShippingLabelSucceeded")
	@version("2.0.3")
	record CreateShippingLabelSucceeded {
		ShippingLabel label;
  	}

	@topics("/com.x.shipping.v2/ProcessShipment/CancelShipment")
	@version("2.0.3")
	record CancelShipment {
		string trackingNumber;
  	}

	record Recipient {
		com.x.core.v1.Name name;
 		string title;
 		com.x.core.v1.Address address;
 		boolean isResidential;
 		string phoneNumber;
 		string phoneExtension;
 		string emailAddress;
  	}

	@topics("/com.x.shipping.v2/ProcessShipment/CancelShipmentFailed")
	@version("2.0.3")
	record CancelShipmentFailed {
		string trackingNumber;
  	}

	@topics("/com.x.shipping.v2/ProcessShipment/CancelShipmentSucceeded")
	@version("2.0.3")
	record CancelShipmentSucceeded {
		string trackingNumber;
  	}

	@topics("/com.x.shipping.v2/GetCarrierSpecialServices/GetCarrierSpecialServicesFailed")
	@version("2.0.3")
	record GetCarrierSpecialServicesFailed {
		array<com.x.core.v1.Error> errors;
  	}

	enum PackageType {
		BOX,
		ENVELOPE,
		TUBE,
		OTHER
	}

	record Package {
		string packageDescription;
 		double weight;
 		WeightUnitType weightUnit;
 		double length;
 		double width;
 		double height;
 		DimensionUnitType dimensionUnit;
 		com.x.core.v1.CurrencyAmount declaredValue;
 		PackageType type;
 		PackageSizeType sizeClassification;
  	}

	record Shipment {
		array<Package> packages;
 		com.x.core.v1.Address address;
 		Recipient recipient;
 		int lotSize;
 		PackagingMethodType packagingMethod;
 		double totalWeight;
 		com.x.core.v1.CurrencyAmount totalInsuredValue;
 		string shippingInstructions;
 		HandoffModeType carrierHandoffMode;
 		array<ShippingService> shippingServices;
 		array<SpecialService> specialServices;
 		string carrierCode;
  	}

	@topics("/com.x.shipping.v2/CalculateShippingRates/CalculateShippingRatesFailed")
	@version("2.0.3")
	record CalculateShippingRatesFailed {
		Shipment shipment;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.shipping.v2/CalculateShippingRates/CalculateShippingRates")
	@version("2.0.3")
	record CalculateShippingRates {
		Shipment shipment;
  	}

	@topics("/com.x.shipping.v2/ProcessShipment/GetTrackingInformationSucceeded")
	@version("2.0.3")
	record GetTrackingInformationSucceeded {
		array<string> trackingDetails;
  	}

	enum PrinterType {
		THERMAL,
		INKJET,
		LASER
	}

	record ShippingLabelParameters {
		Shipment shipment;
 		long shipDate;
 		string referenceCode;
 		LabelImageType imageType;
 		PrinterType printer;
 		boolean showPostage;
 		boolean shippingReceipt;
 		CustomsForm customs;
  	}

	@topics("/com.x.shipping.v2/ProcessShipment/CreateShippingLabelFailed")
	@version("2.0.3")
	record CreateShippingLabelFailed {
		ShippingLabelParameters labelParameters;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.shipping.v2/ProcessShipment/CreateShippingLabel")
	@version("2.0.3")
	record CreateShippingLabel {
		ShippingLabelParameters labelParameters;
  	}

	@topics("/com.x.shipping.v2/GetCarrierHandoffTypes/GetCarrierHandoffTypes")
	@version("2.0.3")
	record GetCarrierHandoffTypes {
 	}

	@topics("/com.x.shipping.v2/GetCarrierHandoffTypes/GetCarrierHandoffTypesFailed")
	@version("2.0.3")
	record GetCarrierHandoffTypesFailed {
		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.shipping.v2/GetShippingServices/GetShippingServicesFailed")
	@version("2.0.3")
	record GetShippingServicesFailed {
		array<com.x.core.v1.Error> errors;
  	}


}
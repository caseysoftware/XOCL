package com.x.workflowadmin.v1 {
	import com.x.workflowadmin.v1.*
	import com.x.core.v1.*

	record WorkflowExecutionControls {
		
		/*
		 * If unspecified, this control will apply to all workflow.
		*/
		union{null, string} workflowDefID = null
		union{null, string} workflowInstKey = null
		boolean workflowPreConditionsSucceedAlways
		boolean workflowPostConditionsSucceedAlways
		union{null, ApplicationInstanceControls} appInstanceControls = null
		union{null, NodeControls} commonNodeControls = null
		union{null, map<NodeControls>} nodeControls = null
		union{null, TransactionControls} commonTransactionControls = null
		union{null, map<TransactionControls>} transactionControls = null
		boolean? clearAllControls
	}
	
	record NodeControls {
		boolean ifConditionEvaluatesToTrueAlways;
		int? doLoopNumInterations;
	}
	
	record TransactionControls {
		boolean preConditionsSucceedAlways;
		boolean postConditionsSucceedAlways;
	}
	
	record ApplicationInstanceControls {
		int? maxOwnedWorkflows;
		union{null, string} leaseReleaseNode = null;
		union{null, string} softCrashNode = null;
		union{null, string} sleepNode = null;
		long? sleepTimeInMillis;
		boolean? clearAllControls;
	}
	
	record GetWorkflowToAppInstanceMap {
		summary "Requests the map from workflow instance to app instance."
		description "Map contains information as to which workflow was processed by which application instance"
		array<string> workflowInstanceKeys;
	}
	
	record GetWorkflowToAppInstanceMapSucceeded {
		summary "Returns the map from workflow instance to app instance."
		description "Map contains information as to which workflow was processed by which application instance. Key and value are workflow instance key and application instance key respectively"
		map<string> workflowToAppInstanceMap;
	}
	
	record GetWorkflowToAppInstanceMapFailed {
		array<Error> errors
	}
}
	

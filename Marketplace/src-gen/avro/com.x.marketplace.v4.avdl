/**
 * This is a autogenerated using the com.x.ocl:xocl-maven-plugin:1.4.18 maven plugin.
 * The contents are generated from the following XOCL files:
 *            ebay.transactions.xocl
 *            marketplace.messages.xocl
 *            marketplace.processes.xocl
 *            ebay.messages.xocl
 *            marketplace.version.xocl
 *            ebay.processes.xocl
 *            marketplace.transactions.xocl
 * DO NOT EDIT THIS FILE DIRECTLY
 */
@namespace("com.x.marketplace.v4")
@status("earlydraft")
protocol com_x_marketplace_v4 {
	import idl "com.x.ordermanagement.v2.avdl";
	import idl "com.x.core.v1.avdl";
	import idl "com.x.pim.v2.avdl";
	import idl "com.x.authz.v2.avdl";

	@topics("/com.x.marketplace.v4/PublishedOfferRevocation/RevokePublishedOfferSucceeded")
	@version("4.0.2")
	record RevokePublishedOfferSucceeded {
		string offerId;
 		union{null,string} policyGroupId = null;
  	}

	record ShippingServiceOption {
		int sellerPriority;
 		string serviceName;
 		com.x.core.v1.CurrencyAmount cost;
 		union{null,com.x.core.v1.CurrencyAmount} discountAmount = null;
 		union{null,com.x.core.v1.CurrencyAmount} additionalCost = null;
 		union{null,com.x.core.v1.CurrencyAmount} packagingHandlingCost = null;
 		union{null,com.x.core.v1.CurrencyAmount} surcharge = null;
 		union{null,array<string>} shipToLocations = null;
 		union{null,array<string>} excludeShipToLocations = null;
  	}

	enum ShippingLocaleType {
		DOMESTIC,
		INTERNATIONAL
	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/LookupSiteMetadataFailed")
	@version("4.0.2")
	record LookupSiteMetadataFailed {
		array<string> siteCode;
 		union{null,string} environmentName = null;
 		array<com.x.core.v1.Error> errors;
  	}

	enum RecommendationCode {
		SHORT_DESCRIPTION,
		SHORT_TITLE,
		TOO_FEW_IMAGES,
		VARIATIONS_ALLOWED
	}

	@topics("/com.x.marketplace.v4/PolicyGroupLookup/LookupPolicyGroupFailed /com.x.marketplace.v4/PolicyGroupLookup.Ebay/LookupPolicyGroupFailed")
	@version("4.0.2")
	record LookupPolicyGroupFailed {
		string policyGroupId;
 		array<com.x.core.v1.Error> errors;
  	}

	enum ShippingRateType {
		FLAT,
		CALCULATED,
		FREIGHT
	}

	record ShippingServiceOptionGroup {
		ShippingRateType rateType;
 		ShippingLocaleType localeType;
 		boolean applyPromotionalShippingRule;
 		array<ShippingServiceOption> shippingServiceOptions;
  	}

	record ShippingPolicy {
		array<ShippingServiceOptionGroup> optionGroups;
  	}

	record SupportedShippingService {
		string description;
 		union{null,string} carrier = null;
 		string serviceName;
 		int shippingTimeMaxInDays;
 		int shippingTimeMinInDays;
 		union{null,array<ShippingRateType>} rateType = null;
 		ShippingLocaleType localeType;
 		boolean dimensionsRequired;
 		boolean weightRequired;
 		boolean surchargeApplicable;
  	}

	record SupportedCountry {
		string countryCode;
 		string description;
  	}

	record Site {
		string siteCode;
 		string siteName;
  	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/LookupSiteMetadata")
	@version("4.0.2")
	record LookupSiteMetadata {
		array<string> siteCode;
 		union{null,string} environmentName = null;
  	}

	enum OfferState {
		NEW,
		PUBLISHED,
		SUSPENDED
	}

	record OfferChannelData {
		OfferState offerState;
 		string channelAssignedOfferId;
 		union{null,string} channelOfferUrl = null;
 		union{null,string} channelStatus = null;
  	}

	enum ShippingDiscountProfileType {
		FLAT,
		CALCULATED
	}

	record ShippingDiscountProfile {
		string shippingDiscountProfileId;
 		string titleProfile;
 		ShippingDiscountProfileType type;
  	}

	record AccountProfile {
		union{null,array<ShippingDiscountProfile>} shippingDiscountProfiles = null;
  	}

	@topics("/com.x.marketplace.v4/TopSellingProductSearch.Ebay/SearchTopSellingProducts /com.x.marketplace.v4/TopSellingProductSearch/SearchTopSellingProducts")
	@version("4.0.2")
	record SearchTopSellingProducts {
		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
 		int numberOfProductsToReturn;
  	}

	@topics("/com.x.marketplace.v4/TopSellingProductSearch.Ebay/SearchTopSellingProductsFailed /com.x.marketplace.v4/TopSellingProductSearch/SearchTopSellingProductsFailed")
	@version("4.0.2")
	record SearchTopSellingProductsFailed {
		array<com.x.core.v1.Error> errors;
 		SearchTopSellingProducts request;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupDeletion/DeletePolicyGroup")
	@version("4.0.2")
	record DeletePolicyGroup {
		string policyGroupId;
  	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/GetAllAvailableChannels")
	@version("4.0.2")
	record GetAllAvailableChannels {
 	}

	record Environment {
		string name;
  	}

	record SiteWithEnvironments {
		Site site;
 		array<Environment> environments;
  	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/GetAllSitesSucceeded")
	@version("4.0.2")
	record GetAllSitesSucceeded {
		array<SiteWithEnvironments> sitesWithEnvironments;
  	}

	record TopSellingProduct {
		string productId;
 		string productTitle;
 		int rank;
 		union{null,string} imageURL = null;
 		union{null,com.x.core.v1.CurrencyAmount} minPrice = null;
 		union{null,com.x.core.v1.CurrencyAmount} maxPrice = null;
 		string productURL;
 		long reviewCount;
  	}

	@topics("/com.x.marketplace.v4/TopSellingProductSearch/SearchTopSellingProductsSucceeded")
	@version("4.0.2")
	record SearchTopSellingProductsSucceeded {
		array<TopSellingProduct> products;
 		SearchTopSellingProducts request;
  	}

	record SalesTaxTableEntry {
		double salesTaxPercentage;
 		string stateOrMunicipality;
 		boolean shippingIncludedInTax;
  	}

	@topics("/com.x.marketplace.v4/SalesTaxTableUpsert/UpsertSalesTaxTable")
	@version("4.0.2")
	record UpsertSalesTaxTable {
		array<SalesTaxTableEntry> salesTaxTable;
 		string siteCode;
 		string xAccountId;
  	}

	@topics("/com.x.marketplace.v4/SalesTaxTableUpsert/UpsertSalesTaxTableFailed")
	@version("4.0.2")
	record UpsertSalesTaxTableFailed {
		array<com.x.core.v1.Error> errors;
 		UpsertSalesTaxTable request;
  	}

	@topics("/com.x.marketplace.v4/SalesTaxTableUpsert/UpsertSalesTaxTableSucceeded")
	@version("4.0.2")
	record UpsertSalesTaxTableSucceeded {
		UpsertSalesTaxTable request;
  	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/GetAllSitesFailed")
	@version("4.0.2")
	record GetAllSitesFailed {
		array<com.x.core.v1.Error> errors;
  	}

	record CancelOfferError {
		string offerId;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/PublishedOfferRevocation/RevokePublishedOfferFailed")
	@version("4.0.2")
	record RevokePublishedOfferFailed {
		CancelOfferError cancelError;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/SearchCategoriesFailed")
	@version("4.0.2")
	record SearchCategoriesFailed {
		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
 		array<com.x.core.v1.Error> errors;
  	}

	record SupportedHandlingTime {
		int maxHandlingTime;
 		string description;
  	}

	record Sku {
		string sku;
 		com.x.core.v1.CurrencyAmount price;
 		int quantity;
  	}

	record Category {
		string id;
 		string name;
 		union{null,string} parentId = null;
 		union{null,boolean} catalogEnabled = null;
 		union{null,int} categoryLevel = null;
 		union{null,boolean} leafCategory = null;
 		union{null,string} categoryUrl = null;
  	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/SearchCategoriesSucceeded")
	@version("4.0.2")
	record SearchCategoriesSucceeded {
		array<Category> categories;
 		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
  	}

	@topics("/com.x.marketplace.v4/PublishedOfferRevocation/RevokePublishedOffer")
	@version("4.0.2")
	record RevokePublishedOffer {
		string offerId;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/OfferSearch/SearchOffers /com.x.marketplace.v4/OfferSearch.Ebay/SearchOffers")
	@version("4.0.2")
	record SearchOffers {
		union{null,array<string>} skus = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
 		union{null,string} xAccountId = null;
  	}

	@topics("/com.x.marketplace.v4/OfferSearch/SearchOffersFailed /com.x.marketplace.v4/OfferSearch.Ebay/SearchOffersFailed")
	@version("4.0.2")
	record SearchOffersFailed {
		SearchOffers request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupDeletion/DeletePolicyGroupFailed")
	@version("4.0.2")
	record DeletePolicyGroupFailed {
		string policyGroupId;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/GetAllAvailableChannelsSucceeded")
	@version("4.0.2")
	record GetAllAvailableChannelsSucceeded {
		string channelName;
 		string channelProviderName;
  	}

	record PaymentPolicy {
		union{null,array<com.x.core.v1.PaymentMethod>} acceptedPaymentTypes = null;
 		union{null,boolean} immediatePaymentRequired = null;
 		union{null,string} paymentInstructions = null;
  	}

	@topics("/com.x.marketplace.v4/StoreLookup/LookupStore")
	@version("4.0.2")
	record LookupStore {
		union{null,string} xAccountId = null;
 		union{null,string} userMarketplaceId = null;
 		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
  	}

	@topics("/com.x.marketplace.v4/StoreLookup/LookupStoreFailed")
	@version("4.0.2")
	record LookupStoreFailed {
		LookupStore request;
 		array<com.x.core.v1.Error> errors;
  	}

	enum RecommendationPriority {
		FAILURE,
		HIGH,
		MEDIUM,
		LOW
	}

	record Recommendation {
		string recommendationCode;
 		string recommendationMessage;
 		RecommendationPriority priority;
  	}

	record MaxFlatShippingRecommendation {
		string recommendationMessage;
 		RecommendationPriority priority;
 		com.x.core.v1.CurrencyAmount maxFlatShippingAllowed;
  	}

	record GTINRecommendation {
		string recommendationMessage;
 		RecommendationPriority priority;
 		array<string> recommendedGTINs;
  	}

	record CategoryRecommendation {
		string recommendationMessage;
 		RecommendationPriority priority;
 		array<Category> recommendedCategories;
  	}

	record AttributeRecommendation {
		string recommendationMessage;
 		RecommendationPriority priority;
 		map<array<string>> recommendedAttributes;
  	}

	record OfferRecommendationInformation {
		union{null,com.x.core.v1.CurrencyAmount} estimatedListingFee = null;
 		union{null,MaxFlatShippingRecommendation} maxFlatShippingRecommendation = null;
 		union{null,AttributeRecommendation} attributeRecommendation = null;
 		union{null,GTINRecommendation} gtinRecommendation = null;
 		union{null,CategoryRecommendation} categoryRecommendation = null;
 		union{null,array<Recommendation>} recommendations = null;
 		union{null,array<com.x.core.v1.Error>} expectedErrors = null;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupLookup.Ebay/LookupPolicyGroup /com.x.marketplace.v4/PolicyGroupLookup/LookupPolicyGroup")
	@version("4.0.2")
	record LookupPolicyGroup {
		string policyGroupId;
  	}

	enum RefundMethod {
		MONEY_BACK,
		EXCHANGE_ONLY,
		STORE_CREDIT
	}

	record ReturnPolicy {
		union{null,string} description = null;
 		union{null,boolean} returnAccepted = null;
 		union{null,boolean} buyerPaysReturnShipping = null;
 		union{null,int} returnByDays = null;
 		union{null,RefundMethod} refundMethod = null;
  	}

	record SupportedReturnPolicy {
		boolean returnsAccepted;
 		array<RefundMethod> method;
 		int maxReturnByDays;
  	}

	record EbayTopSellingProduct {
		string productId;
 		string productTitle;
 		int rank;
 		union{null,string} imageURL = null;
 		union{null,com.x.core.v1.CurrencyAmount} minPrice = null;
 		union{null,com.x.core.v1.CurrencyAmount} maxPrice = null;
 		string productURL;
 		long reviewCount;
 		union{null,string} catalogName = null;
  	}

	@topics("/com.x.marketplace.v4/TopSellingProductSearch.Ebay/SearchEbayTopSellingProductsSucceeded")
	@version("4.0.2")
	record SearchEbayTopSellingProductsSucceeded {
		array<EbayTopSellingProduct> products;
 		SearchTopSellingProducts request;
  	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/SearchCategories")
	@version("4.0.2")
	record SearchCategories {
		union{null,string} siteCode = null;
 		union{null,string} xProductTypeId = null;
 		union{null,string} environmentName = null;
  	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/GetAllSites")
	@version("4.0.2")
	record GetAllSites {
 	}

	@topics("/com.x.marketplace.v4/PolicyGroupDeletion/DeletePolicyGroupSucceeded")
	@version("4.0.2")
	record DeletePolicyGroupSucceeded {
		string policyGroupId;
  	}

	record OfferDeactivated {
		string offerId;
 		string reason;
 		union{null,string} policyGroupId = null;
  	}

	record CalculatedShippingPolicy {
		union{null,string} description = null;
 		string packageType;
 		boolean shippingIrregular = false;
 		com.x.ordermanagement.v2.PackageDimensions dimensions;
 		com.x.ordermanagement.v2.PackageWeight weight;
  	}

	record EbayPolicyGroup {
		string name;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} paymentPolicy = null;
 		union{null,ShippingPolicy} shippingPolicy = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		union{null,CalculatedShippingPolicy} calculatedShippingPolicy = null;
 		string xAccountId;
 		union{null,string} offerDuration = null;
 		union{null,string} location = null;
 		union{null,string} postalCode = null;
 		string countryCode;
 		union{null,string} payPalEmailAddress = null;
 		union{null,int} handlingTime = null;
 		union{null,boolean} useTaxTable = null;
 		union{null,string} domesticShippingDiscountProfileId = null;
 		union{null,string} internationalShippingDiscountProfileId = null;
 		union{null,boolean} applyDomesticPromotionalShippingRule = null;
 		string id;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupUpdate.Ebay/UpdateEbayPolicyGroupFailed")
	@version("4.0.2")
	record UpdateEbayPolicyGroupFailed {
		EbayPolicyGroup p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupUpdate.Ebay/UpdateEbayPolicyGroupSucceeded")
	@version("4.0.2")
	record UpdateEbayPolicyGroupSucceeded {
		EbayPolicyGroup p;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupUpdate.Ebay/UpdateEbayPolicyGroup")
	@version("4.0.2")
	record UpdateEbayPolicyGroup {
		EbayPolicyGroup p;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupCreation.Ebay/CreateEbayPolicyGroupSucceeded")
	@version("4.0.2")
	record CreateEbayPolicyGroupSucceeded {
		EbayPolicyGroup p;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupLookup.Ebay/LookupEbayPolicyGroupSucceeded")
	@version("4.0.2")
	record LookupEbayPolicyGroupSucceeded {
		EbayPolicyGroup p;
  	}

	record EbayPolicyGroupData {
		string name;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} paymentPolicy = null;
 		union{null,ShippingPolicy} shippingPolicy = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		union{null,CalculatedShippingPolicy} calculatedShippingPolicy = null;
 		string xAccountId;
 		union{null,string} offerDuration = null;
 		union{null,string} location = null;
 		union{null,string} postalCode = null;
 		string countryCode;
 		union{null,string} payPalEmailAddress = null;
 		union{null,int} handlingTime = null;
 		union{null,boolean} useTaxTable = null;
 		union{null,string} domesticShippingDiscountProfileId = null;
 		union{null,string} internationalShippingDiscountProfileId = null;
 		union{null,boolean} applyDomesticPromotionalShippingRule = null;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupCreation.Ebay/CreateEbayPolicyGroupFailed")
	@version("4.0.2")
	record CreateEbayPolicyGroupFailed {
		EbayPolicyGroupData p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupCreation.Ebay/CreateEbayPolicyGroup")
	@version("4.0.2")
	record CreateEbayPolicyGroup {
		EbayPolicyGroupData p;
  	}

	record EbayOfferDetails {
		string id;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
 		union{null,string} title = null;
 		union{null,string} subTitle = null;
 		union{null,boolean} giftWrapAvailable = null;
 		union{null,array<string>} marketCategories = null;
 		union{null,PaymentPolicy} paymentPolicy = null;
 		union{null,ShippingPolicy} shippingPolicy = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		union{null,CalculatedShippingPolicy} calculatedShippingPolicy = null;
 		array<Sku> skus;
 		union{null,array<string>} customCategories = null;
 		string listingFormat;
 		string duration;
 		string countryCode;
 		union{null,com.x.core.v1.CurrencyAmount} buyItNowPrice = null;
 		union{null,com.x.core.v1.CurrencyAmount} reservePrice = null;
 		union{null,string} payPalEmailAddress = null;
 		union{null,int} handlingTime = null;
 		union{null,boolean} useTaxTable = null;
 		union{null,string} postalCode = null;
 		union{null,string} location = null;
 		union{null,string} imageVariationName = null;
 		union{null,string} domesticShippingDiscountProfileId = null;
 		union{null,string} internationalShippingDiscountProfileId = null;
 		union{null,boolean} applyDomesticPromotionalShippingRule = null;
 		union{null,array<SalesTaxTableEntry>} salesTaxTable = null;
  	}

	@topics("/com.x.marketplace.v4/GetRecommendationsForOffer/GetRecommendationsForOfferFailed /com.x.marketplace.v4/GetRecommendationsForOffer.WithProductData/GetRecommendationsForOfferFailed")
	@version("4.0.2")
	record GetRecommendationsForOfferFailed {
		array<com.x.core.v1.Error> errors;
 		EbayOfferDetails offer;
  	}

	@topics("/com.x.marketplace.v4/GetRecommendationsForOffer/GetRecommendationsForOfferSucceeded /com.x.marketplace.v4/GetRecommendationsForOffer.WithProductData/GetRecommendationsForOfferSucceeded")
	@version("4.0.2")
	record GetRecommendationsForOfferSucceeded {
		OfferRecommendationInformation recommendationInformation;
 		EbayOfferDetails offer;
  	}

	@topics("/com.x.marketplace.v4/GetRecommendationsForOffer/GetRecommendationsForOffer")
	@version("4.0.2")
	record GetRecommendationsForOffer {
		EbayOfferDetails offer;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/PublishedOfferRevision.Ebay/ReviseEbayPublishedOfferFailed /com.x.marketplace.v4/PublishedOfferRevisionWithProductData.Ebay/ReviseEbayPublishedOfferFailed")
	@version("4.0.2")
	record ReviseEbayPublishedOfferFailed {
		EbayOfferDetails update;
 		union{null,string} policyGroupId = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/PublishedOfferRevision.Ebay/ReviseEbayPublishedOffer")
	@version("4.0.2")
	record ReviseEbayPublishedOffer {
		EbayOfferDetails update;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/OfferPublication.Ebay/PublishEbayOfferFailed /com.x.marketplace.v4/OfferPublicationWithProductData.Ebay/PublishEbayOfferFailed")
	@version("4.0.2")
	record PublishEbayOfferFailed {
		EbayOfferDetails offer;
 		union{null,string} policyGroupId = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/OfferPublication.Ebay/PublishEbayOffer")
	@version("4.0.2")
	record PublishEbayOffer {
		EbayOfferDetails offer;
 		union{null,string} policyGroupId = null;
  	}

	record EbayOffer {
		OfferChannelData channelData;
 		EbayOfferDetails offerDetails;
  	}

	@topics("/com.x.marketplace.v4/OfferSearch.Ebay/SearchEbayOffersSucceeded")
	@version("4.0.2")
	record SearchEbayOffersSucceeded {
		array<EbayOffer> offers;
 		SearchOffers request;
  	}

	@topics("/com.x.marketplace.v4/PublishedOfferRevision.Ebay/ReviseEbayPublishedOfferSucceeded /com.x.marketplace.v4/PublishedOfferRevisionWithProductData.Ebay/ReviseEbayPublishedOfferSucceeded")
	@version("4.0.2")
	record ReviseEbayPublishedOfferSucceeded {
		EbayOffer updatedOffer;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/OfferPublication.Ebay/PublishEbayOfferSucceeded /com.x.marketplace.v4/OfferPublicationWithProductData.Ebay/PublishEbayOfferSucceeded")
	@version("4.0.2")
	record PublishEbayOfferSucceeded {
		EbayOffer offer;
 		union{null,string} policyGroupId = null;
  	}

	record EbayOfferDetailsWithProductData {
		EbayOfferDetails offerDetails;
 		com.x.pim.v2.Product product;
  	}

	@topics("/com.x.marketplace.v4/GetRecommendationsForOffer.WithProductData/GetRecommendationsForOfferWithProductData")
	@version("4.0.2")
	record GetRecommendationsForOfferWithProductData {
		EbayOfferDetailsWithProductData offer;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/PublishedOfferRevisionWithProductData.Ebay/ReviseEbayPublishedOfferWithProductData")
	@version("4.0.2")
	record ReviseEbayPublishedOfferWithProductData {
		EbayOfferDetailsWithProductData update;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/OfferPublicationWithProductData.Ebay/PublishEbayOfferWithProductData")
	@version("4.0.2")
	record PublishEbayOfferWithProductData {
		EbayOfferDetailsWithProductData offer;
 		union{null,string} policyGroupId = null;
  	}

	record OfferDetails {
		string id;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
 		union{null,string} title = null;
 		union{null,string} subTitle = null;
 		union{null,boolean} giftWrapAvailable = null;
 		union{null,array<string>} marketCategories = null;
 		union{null,PaymentPolicy} paymentPolicy = null;
 		union{null,ShippingPolicy} shippingPolicy = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		union{null,CalculatedShippingPolicy} calculatedShippingPolicy = null;
 		array<Sku> skus;
 		union{null,array<string>} customCategories = null;
  	}

	@topics("/com.x.marketplace.v4/PublishedOfferRevision/RevisePublishedOfferFailed /com.x.marketplace.v4/PublishedOfferRevisionWithProductData/RevisePublishedOfferFailed")
	@version("4.0.2")
	record RevisePublishedOfferFailed {
		OfferDetails updatedOffer;
 		array<com.x.core.v1.Error> errors;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/PublishedOfferRevision/RevisePublishedOffer")
	@version("4.0.2")
	record RevisePublishedOffer {
		OfferDetails update;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/OfferPublication/PublishOfferFailed /com.x.marketplace.v4/OfferPublicationWithProductData/PublishOfferFailed")
	@version("4.0.2")
	record PublishOfferFailed {
		OfferDetails offer;
 		union{null,string} policyGroupId = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/OfferPublication/PublishOffer")
	@version("4.0.2")
	record PublishOffer {
		OfferDetails offer;
 		union{null,string} policyGroupId = null;
  	}

	record OfferDetailsWithProductData {
		OfferDetails offerDetails;
 		com.x.pim.v2.Product product;
  	}

	@topics("/com.x.marketplace.v4/PublishedOfferRevisionWithProductData/RevisePublishedOfferWithProductData")
	@version("4.0.2")
	record RevisePublishedOfferWithProductData {
		OfferDetailsWithProductData update;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/OfferPublicationWithProductData/PublishOfferWithProductData")
	@version("4.0.2")
	record PublishOfferWithProductData {
		OfferDetailsWithProductData offer;
 		union{null,string} policyGroupId = null;
  	}

	record Offer {
		OfferChannelData channelData;
 		OfferDetails offerDetails;
  	}

	@topics("/com.x.marketplace.v4/OfferSearch/SearchOffersSucceeded")
	@version("4.0.2")
	record SearchOffersSucceeded {
		array<Offer> offers;
 		SearchOffers request;
  	}

	@topics("/com.x.marketplace.v4/PublishedOfferRevision/RevisePublishedOfferSucceeded /com.x.marketplace.v4/PublishedOfferRevisionWithProductData/RevisePublishedOfferSucceeded")
	@version("4.0.2")
	record RevisePublishedOfferSucceeded {
		Offer updatedOffer;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v4/OfferPublication/PublishOfferSucceeded /com.x.marketplace.v4/OfferPublicationWithProductData/PublishOfferSucceeded")
	@version("4.0.2")
	record PublishOfferSucceeded {
		Offer offer;
 		union{null,string} policyGroupId = null;
  	}

	record PolicyGroupData {
		string name;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} paymentPolicy = null;
 		union{null,ShippingPolicy} shippingPolicy = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		union{null,CalculatedShippingPolicy} calculatedShippingPolicy = null;
 		string xAccountId;
 		union{null,string} offerDuration = null;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupCreation/CreatePolicyGroupFailed")
	@version("4.0.2")
	record CreatePolicyGroupFailed {
		PolicyGroupData p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupCreation/CreatePolicyGroup")
	@version("4.0.2")
	record CreatePolicyGroup {
		PolicyGroupData p;
  	}

	record PolicyGroup {
		string name;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} paymentPolicy = null;
 		union{null,ShippingPolicy} shippingPolicy = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		union{null,CalculatedShippingPolicy} calculatedShippingPolicy = null;
 		string xAccountId;
 		union{null,string} offerDuration = null;
 		string id;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupUpdate/UpdatePolicyGroupFailed")
	@version("4.0.2")
	record UpdatePolicyGroupFailed {
		PolicyGroup p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupUpdate/UpdatePolicyGroupSucceeded")
	@version("4.0.2")
	record UpdatePolicyGroupSucceeded {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupUpdate/UpdatePolicyGroup")
	@version("4.0.2")
	record UpdatePolicyGroup {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupCreation/CreatePolicyGroupSucceeded")
	@version("4.0.2")
	record CreatePolicyGroupSucceeded {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v4/PolicyGroupLookup/LookupPolicyGroupSucceeded")
	@version("4.0.2")
	record LookupPolicyGroupSucceeded {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v4/AccountProfileLookup/LookupAccountProfile")
	@version("4.0.2")
	record LookupAccountProfile {
		union{null,string} xAccountId = null;
 		union{null,string} userMarketplaceId = null;
 		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
  	}

	@topics("/com.x.marketplace.v4/AccountProfileLookup/LookupAccountProfileFailed")
	@version("4.0.2")
	record LookupAccountProfileFailed {
		LookupAccountProfile request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v4/AccountProfileLookup/LookupAccountProfileSucceeded")
	@version("4.0.2")
	record LookupAccountProfileSucceeded {
		AccountProfile store;
 		LookupAccountProfile request;
  	}

	record PackageType {
		string packageName;
 		string packageDescription;
  	}

	record CalculatedShippingMetadata {
		array<PackageType> supportedPackageTypes;
 		array<com.x.core.v1.MeasurementSystem> measurementSystem;
  	}

	record SiteMetadata {
		string siteCode;
 		string siteName;
 		union{null,array<SupportedHandlingTime>} handlingTimes = null;
 		union{null,SupportedReturnPolicy} policy = null;
 		union{null,array<SupportedShippingService>} services = null;
 		array<string> currencies;
 		array<com.x.core.v1.PaymentMethod> methods;
 		array<SupportedCountry> countries;
 		string marketplace;
 		union{null,CalculatedShippingMetadata} calculatedShippingMetadata = null;
 		union{null,array<string>} supportedOfferDurations = null;
  	}

	@topics("/com.x.marketplace.v4/MarketplaceSetup/LookupSiteMetadataSucceeded")
	@version("4.0.2")
	record LookupSiteMetadataSucceeded {
		array<SiteMetadata> siteMetadata;
 		union{null,string} environmentName = null;
  	}

	record CustomCategory {
		long id;
 		string name;
 		int order;
 		array<CustomCategory> childCategories;
  	}

	record MarketplaceStore {
		string name;
 		union{null,array<CustomCategory>} categories = null;
  	}

	@topics("/com.x.marketplace.v4/StoreLookup/LookupStoreSucceeded")
	@version("4.0.2")
	record LookupStoreSucceeded {
		MarketplaceStore store;
 		LookupStore request;
  	}


}
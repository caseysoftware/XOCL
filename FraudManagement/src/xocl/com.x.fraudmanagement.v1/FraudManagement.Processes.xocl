/*
 * By convention, processes and workflows for a domain reside in the file <domain>.Processes.xocl
 */

package com.x.fraudmanagement.v1 {	
	import com.x.fraudmanagement.v1.*
	
    /*
     * This process determines the fraud risk presented by a given shopping session
     */
    process FraudExposureLookup {
        description "A FraudManager provides a rating of the fraud exposure a customer represents"
        
        /*
         * FraudEvaluator - The cart evaluating the fraud risk a given shopper represents
         * FraudManager - The fraud solution providing an evaluation of shopper risk.
         */
        roles(FraudEvaluator, FraudManager)
    
		workflow {
			summary "Determine the fraud risk of a shopper."
			description "A FraudManagement system is queried for the relative fraud risk a given shopping session represents"

			transaction LookupFraudExposure {
				roles(FraudEvaluator, FraudManager)
			}
		}
	}
	
	/**
	 * This process sends a signature collected on a UI to a fraud management solution provider 
	 */
    process CheckoutSignatureCreate {
        description "A consumer is stepping through a checkout flow and data is captured to mitigate fraud "
        
        roles(CheckoutProcessor, FraudManager)
    
		workflow {
			summary "Signature capture during checkout."
			description "The CheckoutProcessor provides the FraudManager with a signature captured during a shopper's checkout. 
						This data can be used to challenge chargebacks done by the legitimate card holder"

			transaction CheckoutSignatureCreate {
				roles(CheckoutProcessor, FraudManager)
			}
		}
   }
   
   
   /*
    * This process sends details about an order and the content of an html page 
    * representing the order to the fraud management solution provider. 
    */
	process CheckoutDetailCreate {
        description "A consumer is stepping through a checkout flow and data is captured to mitigate fraud "
        
        roles(CheckoutProcessor, FraudManager)
		
		workflow {
			transaction CheckoutDetailCreate {
				roles(CheckoutProcessor, FraudManager)
			}
		}
	}
   
   
   /*
    * This process requests a previously stored signature from the fraud management solution provider. 
    */
	process LookupCheckoutSignature {
        description "A checkout or order management system requests an existing signature associated with an order"
        
        roles(CheckoutProcessor, FraudManager)
		
		workflow {
			transaction LookupCheckoutSignature {
				roles(CheckoutProcessor, FraudManager)
			}
		}
	}
   
   
	/**
	 * This process describes the evaluation of an order a fraud mitigator could take as part
	 * of a deeper investigation into chargeback disputes. 
	 */

    process LookupScreenCapture {
        description "A store admin is reviewing orders or responding to chargebacks. "
        
        roles(ChargebackMitigationManager, FraudManager)
    
	    /*
	     * This workflow describes transactions available to repond to chargebacks. 
	     */
		workflow {
			summary "Chargeback mitigation"
			description "This workflow represents actions a person mitigating fraud on behalf of a store might need to perform on an individual order"

			transaction LookupScreenCapture {
				roles(ChargebackMitigationManager, FraudManager)
			}
		}
   }

	/**
	 * This process allows a fraud mitigator to view the risk associated with a given order. 
	 */
    process LookupFraudExposure {
        description "A store admin is reviewing orders or responding to chargebacks. "
        
        roles(ChargebackMitigationManager, FraudManager)
    
		workflow {
			summary "Chargeback mitigation"
			description ""

			transaction LookupFraudExposure {
				roles(ChargebackMitigationManager, FraudManager)
			}
							
		}
   }
   
}
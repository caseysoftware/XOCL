// Definition of the general-use, ecosystemmanagement level messages.

// Note: The use of MAY, MUST, OPTIONAL, etc, in all caps are used to indicate
// implementation expectations.  This is similar to standard RFC word usage.

// All capabilities MUST implement both Ping and Pong messages
// (that is, accept Ping as an incoming message, and respond with a Pong).
//

package com.x.ecosystemmanagement.v2 {
	import com.x.ecosystemmanagement.v2.* 
	import com.x.core.v1.*

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
	// Ping message for testing a capability's ability to receive messages.
	// To use this message the sender MUST share a tenant with the recipient
	// (as for any message) and MUST also specify a Destination ID header to
	// avoid sending to every capability (versus the one intended).
	//
	// The payload is OPTIONAL for the sender.  If the recipient gets a Ping
	// with a payload, then the corresponding Pong MUST contain that same
	// payload.
	//
	record Ping {
		string? payload  // Optional, copied to pong, if present
	}

	// Pong message for responding to pings.  All capabilities MUST respond to
	// a Ping message with a Pong message, and MUST copy any payload present
	// from the Ping to the Pong.  The responding capability MUST not alter the
	// payload in this process.
	//
	record Pong {
		string? payload  // Must be copied from ping (verbatim), if present
	}
	
}
	
